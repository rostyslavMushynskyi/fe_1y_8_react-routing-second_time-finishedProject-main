import { useEffect, useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { Helmet } from "react-helmet-async";
import { Oval } from "react-loader-spinner";
import { useAuth } from "../contexts/AuthContext";
import {
  getFavoritesCount,
  getFavorites,
  setFavoritesCount,
} from "../services/favoritesService";
import { getRatingsStats } from "../services/ratingService";
import styles from "./ProfilePage.module.css";

function ProfilePage() {
  const { isAuthenticated, user, loading, logout } = useAuth();
  const navigate = useNavigate();
  const [actualFavoritesCount, setActualFavoritesCount] = useState(() => {
    return isAuthenticated ? getFavoritesCount() : 0;
  });
  const [isLoadingFavorites, setIsLoadingFavorites] = useState(false);
  const [ratingsStats, setRatingsStats] = useState(() => {
    return getRatingsStats();
  });
  const [memberSince, setMemberSince] = useState("");

  useEffect(() => {
    if (!loading && !isAuthenticated) {
      navigate("/login", { replace: true });
    }
  }, [isAuthenticated, loading, navigate]);

  useEffect(() => {
    if (isAuthenticated && user) {
      const fetchFavoritesCount = async () => {
        setIsLoadingFavorites(true);
        try {
          const favoritesResult = await getFavorites(1);
          const actualCount = favoritesResult?.totalCount || 0;

          setActualFavoritesCount(actualCount);
          setFavoritesCount(actualCount);
          setRatingsStats(getRatingsStats());
        } catch (error) {
          console.error("Failed to fetch favorites count:", error);
        } finally {
          setIsLoadingFavorites(false);
        }
      };

      fetchFavoritesCount();
      
      // –û–±—á–∏—Å–ª—é—î–º–æ –¥–∞—Ç—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó (—Å–∏–º—É–ª—è—Ü—ñ—è)
      const registrationDate = new Date('2023-01-01').toLocaleDateString('uk-UA', {
        year: 'numeric',
        month: 'long'
      });
      setMemberSince(registrationDate);
    } else {
      setActualFavoritesCount(0);
    }
  }, [isAuthenticated, user]);

  const handleLogout = async () => {
    try {
      await logout();
      navigate("/", { replace: true });
    } catch (error) {
      console.error("Logout error:", error);
    }
  };

  const quickActions = [
    {
      to: "/movies",
      icon: "üîç",
      title: "–ó–Ω–∞–π—Ç–∏ —Ñ—ñ–ª—å–º–∏",
      description: "–ü–æ—à—É–∫ –Ω–æ–≤–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤"
    },
    {
      to: "/favorites",
      icon: "‚ù§Ô∏è",
      title: "–£–ª—é–±–ª–µ–Ω—ñ",
      description: `${actualFavoritesCount} —Ñ—ñ–ª—å–º—ñ–≤`
    },
    {
      to: "/my-ratings",
      icon: "‚≠ê",
      title: "–ú–æ—ó –æ—Ü—ñ–Ω–∫–∏",
      description: `${ratingsStats.totalRated} –æ—Ü—ñ–Ω–µ–Ω–∏—Ö`
    }
  ];

  if (loading) {
    return (
      <div className={styles.loading}>
        <Oval color="#646cff" secondaryColor="#242424" height={50} width={50} />
        <span>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é...</span>
      </div>
    );
  }

  if (!isAuthenticated || !user) {
    return null;
  }

  return (
    <div className={styles.container}>
      <Helmet>
        <title>–ü—Ä–æ—Ñ—ñ–ª—å | MovieRate</title>
        <meta 
          name="description" 
          content={`–ü—Ä–æ—Ñ—ñ–ª—å ${user.username} - –ø–µ—Ä–µ–≥–ª—è–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, —É–ª—é–±–ª–µ–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤ —Ç–∞ –æ—Å–æ–±–∏—Å—Ç–∏—Ö —Ä–µ–π—Ç–∏–Ω–≥—ñ–≤`} 
        />
      </Helmet>

      <div className={styles.profileCard}>
        {/* Header with user info */}
        <div className={styles.header}>
          <div className={styles.avatarSection}>
            {user.avatar?.gravatar?.hash ? (
              <img
                src={`https://www.gravatar.com/avatar/${user.avatar.gravatar.hash}?s=150`}
                alt={user.username}
                className={styles.avatar}
              />
            ) : (
              <div className={styles.avatarPlaceholder}>
                <span>{user.username?.charAt(0).toUpperCase() || "U"}</span>
              </div>
            )}
            <div className={styles.onlineStatus}>
              <span className={styles.statusDot}></span>
              –û–Ω–ª–∞–π–Ω
            </div>
          </div>

          <div className={styles.userInfo}>
            <h1 className={styles.username}>{user.username}</h1>
            {user.name && <p className={styles.realName}>{user.name}</p>}
            <p className={styles.userId}>ID: {user.id}</p>
            <div className={styles.memberInfo}>
              <span className={styles.memberSince}>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ {memberSince}</span>
            </div>
          </div>
        </div>

        {/* Enhanced Stats */}
        <div className={styles.statsGrid}>
          <div className={styles.statCard}>
            <div className={styles.statIcon}>‚ù§Ô∏è</div>
            <div className={styles.statContent}>
              <span className={`${styles.statNumber} ${isLoadingFavorites ? styles.loading : ""}`}>
                {isLoadingFavorites ? (
                  <span className={styles.loadingDots}>‚ü≥</span>
                ) : (
                  <span key={actualFavoritesCount} className={styles.countNumber}>
                    {actualFavoritesCount}
                  </span>
                )}
              </span>
              <span className={styles.statLabel}>–û–±—Ä–∞–Ω—ñ —Ñ—ñ–ª—å–º–∏</span>
              <Link to="/favorites" className={styles.statLink}>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ ‚Üí</Link>
            </div>
          </div>

          <div className={styles.statCard}>
            <div className={styles.statIcon}>‚≠ê</div>
            <div className={styles.statContent}>
              <span className={styles.statNumber}>{ratingsStats.totalRated}</span>
              <span className={styles.statLabel}>–û—Ü—ñ–Ω–µ–Ω—ñ —Ñ—ñ–ª—å–º–∏</span>
              <Link to="/my-ratings" className={styles.statLink}>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ ‚Üí</Link>
            </div>
          </div>

          <div className={styles.statCard}>
            <div className={styles.statIcon}>üìä</div>
            <div className={styles.statContent}>
              <span className={styles.statNumber}>
                {ratingsStats.totalRated > 0 ? ratingsStats.averageRating : "‚Äî"}
              </span>
              <span className={styles.statLabel}>–°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞</span>
              <span className={styles.statDetails}>
                {ratingsStats.totalRated > 0 ? `–ù–∞–π–≤–∏—â–∞: ${ratingsStats.highestRating}` : "–ü–æ–∫–∏ –Ω–µ–º–∞—î –æ—Ü—ñ–Ω–æ–∫"}
              </span>
            </div>
          </div>

          <div className={styles.statCard}>
            <div className={styles.statIcon}>üèÜ</div>
            <div className={styles.statContent}>
              <span className={styles.statNumber}>{actualFavoritesCount + ratingsStats.totalRated}</span>
              <span className={styles.statLabel}>–ó–∞–≥–∞–ª—å–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</span>
              <span className={styles.statDetails}>–í—Å—å–æ–≥–æ –≤–∑–∞—î–º–æ–¥—ñ–π</span>
            </div>
          </div>
        </div>

        {/* Quick Actions */}
        <div className={styles.quickActionsSection}>
          <h3 className={styles.sectionTitle}>–®–≤–∏–¥–∫—ñ –¥—ñ—ó</h3>
          <div className={styles.quickActions}>
            {quickActions.map((action, index) => (
              <Link key={index} to={action.to} className={styles.quickActionCard}>
                <div className={styles.actionIcon}>{action.icon}</div>
                <div className={styles.actionContent}>
                  <h4 className={styles.actionTitle}>{action.title}</h4>
                  <p className={styles.actionDescription}>{action.description}</p>
                </div>
                <div className={styles.actionArrow}>‚Üí</div>
              </Link>
            ))}
          </div>
        </div>

        {/* Account Information */}
        <div className={styles.accountInfo}>
          <h3 className={styles.sectionTitle}>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∞–∫–∫–∞—É–Ω—Ç</h3>
          <div className={styles.infoGrid}>
            <div className={styles.infoCard}>
              <div className={styles.infoIcon}>üåç</div>
              <div className={styles.infoContent}>
                <span className={styles.infoLabel}>–ö—Ä–∞—ó–Ω–∞</span>
                <span className={styles.infoValue}>{user.iso_3166_1 || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
              </div>
            </div>

            <div className={styles.infoCard}>
              <div className={styles.infoIcon}>üó£Ô∏è</div>
              <div className={styles.infoContent}>
                <span className={styles.infoLabel}>–ú–æ–≤–∞</span>
                <span className={styles.infoValue}>{user.iso_639_1 || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
              </div>
            </div>

            <div className={styles.infoCard}>
              <div className={styles.infoIcon}>üîó</div>
              <div className={styles.infoContent}>
                <span className={styles.infoLabel}>–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è</span>
                <span className={styles.infoValue}>TMDb API</span>
              </div>
            </div>

            <div className={styles.infoCard}>
              <div className={styles.infoIcon}>üìÖ</div>
              <div className={styles.infoContent}>
                <span className={styles.infoLabel}>–û—Å—Ç–∞–Ω–Ω—ñ–π –≤—Ö—ñ–¥</span>
                <span className={styles.infoValue}>–ó–∞—Ä–∞–∑ –∞–∫—Ç–∏–≤–Ω–∏–π</span>
              </div>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className={styles.actionsSection}>
          <h3 className={styles.sectionTitle}>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞–∫–∫–∞—É–Ω—Ç–æ–º</h3>
          <div className={styles.actions}>
            <a
              href={`https://www.themoviedb.org/u/${user.username}`}
              target="_blank"
              rel="noopener noreferrer"
              className={styles.actionButton}
            >
              <span className={styles.actionButtonIcon}>üé¨</span>
              –ü—Ä–æ—Ñ—ñ–ª—å –Ω–∞ TMDb
            </a>

            <button className={styles.logoutButton} onClick={handleLogout}>
              <span className={styles.actionButtonIcon}>üö™</span>
              –í–∏–π—Ç–∏ –∑ –∞–∫–∫–∞—É–Ω—Ç—É
            </button>
          </div>
        </div>

        {/* Footer */}
        <div className={styles.profileFooter}>
          <p className={styles.footerText}>
            –î–∞–Ω—ñ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—é—Ç—å—Å—è –∑ –≤–∞—à–∏–º –ø—Ä–æ—Ñ—ñ–ª–µ–º TMDb. 
            –ó–º—ñ–Ω–∏ –≤ –æ—Ü—ñ–Ω–∫–∞—Ö —ñ —Å–ø–∏—Å–∫–∞—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è.
          </p>
        </div>
      </div>
    </div>
  );
}

export default ProfilePage;